version: '3.8'

services:
  mongo:
    image: mongo:6
    container_name: mongo
    restart: unless-stopped
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis:7
    container_name: redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

  auth-service:
    build:
      context: .
      dockerfile: apps/auth-service/Dockerfile
    container_name: auth-service
    env_file:
      - apps/auth-service/.env
    ports:
      - '3001:3001'
    working_dir: /app
    command: node dist/apps/auth-service/main.js
    depends_on:
      - mongo

  concert-service:
    build:
      context: .
      dockerfile: apps/concert-service/Dockerfile
    container_name: concert-service
    env_file:
      - apps/concert-service/.env
    ports:
      - '3002:3002'
    working_dir: /app
    command: node dist/apps/concert-service/main.js
    depends_on:
      - mongo
      - redis

  booking-service:
    build:
      context: .
      dockerfile: apps/booking-service/Dockerfile
    container_name: booking-service
    env_file:
      - apps/booking-service/.env
    ports:
      - '3003:3003'
    working_dir: /app
    command: node dist/apps/booking-service/main.js
    depends_on:
      - mongo
      - redis

  notification-service:
    build:
      context: .
      dockerfile: apps/notification-service/Dockerfile
    container_name: notification-service
    env_file:
      - apps/notification-service/.env
    ports:
      - '3004:3004'
    working_dir: /app
    command: node dist/apps/notification-service/main.js
    depends_on:
      - mongo
      - redis

volumes:
  mongo_data:
  redis_data:
